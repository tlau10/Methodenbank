//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.17 at 01:41:25 PM CEST 
//


package webService;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the webService package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _RowType_QNAME = new QName("", "rowType");
    private final static QName _BoundHigh_QNAME = new QName("", "boundHigh");
    private final static QName _SessionId_QNAME = new QName("", "sessionId");
    private final static QName _LpbaName_QNAME = new QName("", "lpbaName");
    private final static QName _Command_QNAME = new QName("", "command");
    private final static QName _Value_QNAME = new QName("", "value");
    private final static QName _BoundLow_QNAME = new QName("", "boundLow");
    private final static QName _Optimization_QNAME = new QName("", "optimization");
    private final static QName _RowName_QNAME = new QName("", "rowName");
    private final static QName _Variable_QNAME = new QName("", "variable");
    private final static QName _MetaData_QNAME = new QName("", "metaData");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: webService
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link LpResult }
     * 
     */
    public LpResult createLpResult() {
        return new LpResult();
    }

    /**
     * Create an instance of {@link ResultVariables }
     * 
     */
    public ResultVariables createResultVariables() {
        return new ResultVariables();
    }

    /**
     * Create an instance of {@link ResultRows }
     * 
     */
    public ResultRows createResultRows() {
        return new ResultRows();
    }

    /**
     * Create an instance of {@link ResultRow }
     * 
     */
    public ResultRow createResultRow() {
        return new ResultRow();
    }

    /**
     * Create an instance of {@link ResultColumns }
     * 
     */
    public ResultColumns createResultColumns() {
        return new ResultColumns();
    }

    /**
     * Create an instance of {@link ResultColumn }
     * 
     */
    public ResultColumn createResultColumn() {
        return new ResultColumn();
    }

    /**
     * Create an instance of {@link Analysis }
     * 
     */
    public Analysis createAnalysis() {
        return new Analysis();
    }

    /**
     * Create an instance of {@link ObjectiveFunctionVariations }
     * 
     */
    public ObjectiveFunctionVariations createObjectiveFunctionVariations() {
        return new ObjectiveFunctionVariations();
    }

    /**
     * Create an instance of {@link ObjectiveFunctionVariation }
     * 
     */
    public ObjectiveFunctionVariation createObjectiveFunctionVariation() {
        return new ObjectiveFunctionVariation();
    }

    /**
     * Create an instance of {@link BVectorVariations }
     * 
     */
    public BVectorVariations createBVectorVariations() {
        return new BVectorVariations();
    }

    /**
     * Create an instance of {@link BVectorVariation }
     * 
     */
    public BVectorVariation createBVectorVariation() {
        return new BVectorVariation();
    }

    /**
     * Create an instance of {@link AnalysisUpperLimit }
     * 
     */
    public AnalysisUpperLimit createAnalysisUpperLimit() {
        return new AnalysisUpperLimit();
    }

    /**
     * Create an instance of {@link AnalysisLowerLimit }
     * 
     */
    public AnalysisLowerLimit createAnalysisLowerLimit() {
        return new AnalysisLowerLimit();
    }

    /**
     * Create an instance of {@link MethodApi }
     * 
     */
    public MethodApi createMethodApi() {
        return new MethodApi();
    }

    /**
     * Create an instance of {@link Lpba }
     * 
     */
    public Lpba createLpba() {
        return new Lpba();
    }

    /**
     * Create an instance of {@link Rows }
     * 
     */
    public Rows createRows() {
        return new Rows();
    }

    /**
     * Create an instance of {@link Row }
     * 
     */
    public Row createRow() {
        return new Row();
    }

    /**
     * Create an instance of {@link Columns }
     * 
     */
    public Columns createColumns() {
        return new Columns();
    }

    /**
     * Create an instance of {@link Column }
     * 
     */
    public Column createColumn() {
        return new Column();
    }

    /**
     * Create an instance of {@link RightHandSides }
     * 
     */
    public RightHandSides createRightHandSides() {
        return new RightHandSides();
    }

    /**
     * Create an instance of {@link Rhs }
     * 
     */
    public Rhs createRhs() {
        return new Rhs();
    }

    /**
     * Create an instance of {@link Properties }
     * 
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link LpResults }
     * 
     */
    public LpResults createLpResults() {
        return new LpResults();
    }

    /**
     * Create an instance of {@link DataTransport }
     * 
     */
    public DataTransport createDataTransport() {
        return new DataTransport();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComparatorCheck }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "rowType")
    public JAXBElement<ComparatorCheck> createRowType(ComparatorCheck value) {
        return new JAXBElement<ComparatorCheck>(_RowType_QNAME, ComparatorCheck.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "boundHigh")
    public JAXBElement<Double> createBoundHigh(Double value) {
        return new JAXBElement<Double>(_BoundHigh_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "sessionId")
    public JAXBElement<String> createSessionId(String value) {
        return new JAXBElement<String>(_SessionId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lpbaName")
    public JAXBElement<String> createLpbaName(String value) {
        return new JAXBElement<String>(_LpbaName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "command")
    public JAXBElement<String> createCommand(String value) {
        return new JAXBElement<String>(_Command_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "value")
    public JAXBElement<Double> createValue(Double value) {
        return new JAXBElement<Double>(_Value_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "boundLow")
    public JAXBElement<Double> createBoundLow(Double value) {
        return new JAXBElement<Double>(_BoundLow_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OptimizerCheck }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "optimization")
    public JAXBElement<OptimizerCheck> createOptimization(OptimizerCheck value) {
        return new JAXBElement<OptimizerCheck>(_Optimization_QNAME, OptimizerCheck.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "rowName")
    public JAXBElement<String> createRowName(String value) {
        return new JAXBElement<String>(_RowName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "variable")
    public JAXBElement<String> createVariable(String value) {
        return new JAXBElement<String>(_Variable_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "metaData")
    public JAXBElement<Object> createMetaData(Object value) {
        return new JAXBElement<Object>(_MetaData_QNAME, Object.class, null, value);
    }

}
