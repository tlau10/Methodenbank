/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.text.TableView;
import gui.Modell;

//Klasse wurde von den Studierenden erstellt
public class Menue_Modellanlegen1 extends javax.swing.JFrame {

    static int knoten = 0;
    /**
     * Creates new form Menue_Modellanlegen1
     */
    public Menue_Modellanlegen1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        knotenEingabeTextField = new javax.swing.JTextField();
        tabelleAnlegen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Knotenanzahl:");

        knotenEingabeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knotenEingabeTextFieldActionPerformed(evt);
            }
        });
        knotenEingabeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                knotenEingabeTextFieldKeyPressed(evt);
            }
        });

        tabelleAnlegen.setText("Tabelle anlegen");
        tabelleAnlegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabelleAnlegenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(knotenEingabeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(tabelleAnlegen, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(knotenEingabeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tabelleAnlegen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void knotenEingabeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knotenEingabeTextFieldActionPerformed
        function_Knoten();
    }//GEN-LAST:event_knotenEingabeTextFieldActionPerformed

    private void tabelleAnlegenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabelleAnlegenActionPerformed
       
        function_Knoten();

    }//GEN-LAST:event_tabelleAnlegenActionPerformed

    private void knotenEingabeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_knotenEingabeTextFieldKeyPressed
        
    }//GEN-LAST:event_knotenEingabeTextFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField knotenEingabeTextField;
    public javax.swing.JButton tabelleAnlegen;
    // End of variables declaration//GEN-END:variables


    public void setKnoten(int knoten){
        this.knoten = knoten;
    }
    
    public static int getKnoten(){
        return knoten;
    }
    
    private void function_Knoten() {      
        
        try {
            if(knotenEingabeTextField.getText() != null) {
                
                this.setKnoten(Integer.parseInt(knotenEingabeTextField.getText()));
               
                Modell modell = new Modell();
                modell.setVisible(true);
              
                modell.createTabellen(getKnoten());
                
                this.dispose();
            } 
            
         } catch(RuntimeException re) {
             JOptionPane.showMessageDialog(null, "Eingabe ungültig oder Fehler bei Ausführung !");
             Logger.getLogger(Menue_Modellanlegen1.class.getName()).log(Level.SEVERE, null, re);
             this.dispose();
             
         }        
    }

}
