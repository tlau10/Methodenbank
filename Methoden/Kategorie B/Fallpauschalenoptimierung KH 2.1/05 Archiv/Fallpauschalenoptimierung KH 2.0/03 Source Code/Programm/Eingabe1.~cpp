//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Eingabe1.h"
#include "Startseite1.h"
#include "Eingabe2.h"
#include "Ergebnis.h"
#include "unvollstEingabe.h"
//#include "verketteteListe.h"
#include "AbfrageZuruecksetzen.h"
#include "LpSolve.h"
#include "AbfrageAbbruch.h"
#include "AbbrechenEingabe1.h"

#include <iostream>
#include <string>
using namespace std;

#include <fstream.h>
#include <string.h>
#include <ctype.h>

//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TFormEingabe1 *FormEingabe1;
//---------------------------------------------------------------------------
__fastcall TFormEingabe1::TFormEingabe1(TComponent* Owner)
        : TForm(Owner)
{
        int anzahl = 1;
        LabelAnzahlFallpauschalen->Text = anzahl;
        LabelAnzahlFallpauschalen->Show();

        StringGridTabelle->Cells[0][0] = "Fallklasse";
        StringGridTabelle->Cells[1][0] = "Verweildauer (gT)";
        StringGridTabelle->Cells[2][0] = "Pflegebedarf (S/T)";
        StringGridTabelle->Cells[3][0] = "OP- Bedarf (S)";
        StringGridTabelle->Cells[4][0] = "Laborbedarf (M)";
        StringGridTabelle->Cells[5][0] = "Röntgenbedarf (gM) Gerät alt";
        StringGridTabelle->Cells[6][0] = "Röntgenbedarf (gM) Gerät neu";
        StringGridTabelle->Cells[7][0] = "Fallpauschale (GE)";
}
//---------------------------------------------------------------------------
void __fastcall TFormEingabe1::UpDownAnzahlFallpauschalenClick(
      TObject *Sender, TUDBtnType Button)
{
         if( UpDownAnzahlFallpauschalen->OnMouseUp )
        {
                UpDownAnzahlFallpauschalen->Increment;
        }
}
//---------------------------------------------------------------------------
void __fastcall TFormEingabe1::ButtonWeiterEingabe1Click(TObject *Sender)
{
         bool fehler = false; // kein Fehler

        //-- Bettenanzahl -----------------------------
        AnsiString s = LabelBettenanzahl->Text;
        string st ="";
        char z= ',';

        //kein Zeichen im Eingabefeld für die Anzahl der Betten
        if( s.Length() == 0 )
        {
                FormUnvollstEingabe->ShowModal();
                fehler = true;
        }
        else
        {
                //Überprüfen ob string nicht zugelassene Zeichen enthält
                st = s.c_str();
                for ( int i = 0; fehler == false && i < st.length(); i++ )
                {
                        if( i == 0 )
                        {
                                //Wenn Wert negativ ist
                                if( st[i] == '-' )
                                {
                                        Application->MessageBoxA("Negativer Wert für Anzahl der Betten macht keinen Sinn.\nBitte Eingabe korrigieren", "Eingabefehler", 0 );
                                        fehler = true;
                                }
                        }

                          if( st[i] == ',' && fehler == false )
                          {
                                //wenn der eingegebene Wert ein Komma enthält
                                Application->MessageBoxA("Für die Anzahl der Betten bitte nur ganze Zahlen eingeben.", "Eingabefehler", 0);
                                fehler = true;
                          }
                          else if( ! isdigit( st[i] ) && fehler == false )
                          {
                                //Buchstaben o.ä. wurden eingegeben
                                Application->MessageBoxA("Bei der Anzahl der Betten bitte nur ganze Zahlen eingeben.\nKeine Buchstaben oder andere Zeichen eingeben!", "Eingabefehler", 0);
                                fehler = true;
                          }
                          else
                          {}
                }
        }
        if( fehler == false )
        {
                s = LabelBerechnungszeitraum->Text;
                if( s.Length() == 0 )
                {
                        FormUnvollstEingabe->ShowModal();
                        fehler = true;
                }
                else
                {
                         st = s.c_str();
                         for ( int i = 0; fehler == false && i < st.length(); i++ )
                        {
                                if( i == 0 )
                                {
                                        //wenn Wert für Berechnungszeitraum negativ eingegeben wurde
                                        if(st[i] == '-' )
                                        {
                                                 Application->MessageBoxA("Negativer Wert für den Berechnungszeitraum macht keinen Sinn.\nBitte Eingabe korrigieren", "Eingabefehler", 0 );
                                                 fehler = true;
                                        }
                                }
                                 if( st[i] == ',' && fehler == false)
                                 {
                                        //wenn Wert für Berechnungszeitraum mit Komma eingegeben wurde
                                        Application->MessageBoxA("Für Berechnungszeitraum bitte nur ganze Zahlen eingeben.", "Eingabefehler", 0);
                                        fehler = true;
                                 }
                                 else if( ! isdigit( st[i] ) && fehler == false  )
                                 {
                                        //wenn Buchstaben o.ä. eingegeben wurden
                                        Application->MessageBoxA("Für den Berechnungszeitraum bitte nur ganze Zahlen eingeben.\nKeine Buchstaben oder andere Zeichen eingeben!", "Eingabefehler", 0);
                                        fehler = true;
                                 }
                                 else
                                 {}
                        }
                }
        }
        if( fehler == false )
        {
                //Tabelle auf Eingabefehler überprüfen
                for( int i = 1; i < StringGridTabelle->ColCount && fehler == false; i++ )
                        for( int j =1; j < StringGridTabelle->RowCount && fehler == false; j++ )
                        {
                                s = StringGridTabelle->Cells[i][j];
                                if( s.Length() == 0 )
                                {
                                        //Felder wurden nicht ausgefüllt
                                        FormUnvollstEingabe->ShowModal();
                                        fehler = true;
                                }
                                else
                                {
                                        //st = s.AnsiLastChar();
                                        st = s.c_str();
                                        for ( int k = 0;  fehler == false && k < st.length(); k++ )
                                        {
                                                if( k == 0 )
                                                {
                                                        //überprüfen ob Werte negativ sind
                                                        if( st[k] == '-' )
                                                        {
                                                                Application->MessageBoxA("Negativer Wert in Tabelle macht keinen Sinn.\nBitte Eingabe korrigieren", "Negative Zahl eingegeben", 0 );
                                                                fehler = true;
                                                        }
                                                }
                                                if( fehler == false && ! isdigit( st[k] )  )
                                                {
                                                        if( st[k] != ',' )
                                                        {
                                                                //wenn in der Tabelle keine Zahlen oder ',' eingegeben werden
                                                                Application->MessageBoxA("In der Tabelle bitte nur Zahlen eingeben!", "Eingabefehler", 0);
                                                                fehler = true;
                                                         }
                                                }
                                                //in manchen Fällen (z.B. Anzahl der Fallklassen) sind keine Kommazahlen erlaubt
                                                if( fehler == false && ( i == 1 || i == 5 || i == 6 ) )
                                                {
                                                        if( st[k] == ',' )
                                                         {
                                                                if( i == 1 )
                                                                {
                                                                        Application->MessageBoxA("Für die Verweildauer bitte nur ganze Tage eingeben!\nIm Krankenhaus werden immer ganze Tage abgerechnet.", "Eingabefehler", 0);
                                                                }
                                                                else if ( i == 5 )
                                                                {
                                                                        Application->MessageBoxA("Für den Zeitaufwand für das Röntgen am alten\nGerät bitte nur ganze Minuten eingeben.", "Eingabefehler", 0);
                                                                }
                                                                else
                                                                {
                                                                        Application->MessageBoxA("Für den Zeitaufwand für das Röntgen am neuen\nGerät bitte nur ganze Minuten eingeben.", "Eingabefehler", 0);
                                                                }

                                                                fehler = true;
                                                         }
                                                }
                                        }
                                }
                        }
        }
        //alle Eingabefelder wurden überprüft
        if( fehler == false )
        {
                FormEingabe2->ShowModal();
        }
}
//---------------------------------------------------------------------------
void __fastcall TFormEingabe1::ButtonBeendenEingabe1Click(TObject *Sender)
{
        FormAbbruchEingabeEins->ShowModal();
}
//---------------------------------------------------------------------------
void __fastcall TFormEingabe1::ButtonZurueckEingabe1Click(TObject *Sender)
{
        FormZuruecksetzen->ShowModal();
}
//---------------------------------------------------------------------------


void __fastcall TFormEingabe1::StringGridTabelleClick(TObject *Sender)
{
        //Inhalt überprüfen
        bool fehler = false;
        AnsiString s = LabelAnzahlFallpauschalen->Text;
        string st= "";
        if( s.Length() == 0 )
        {
                FormUnvollstEingabe->ShowModal();
                fehler = true;
        }
        else
        {
                st = s.c_str();
                for ( int i = 0; i < st.length() && fehler==false; i++ )
                {
                        if( st[i] == ',' )
                        {
                                Application->MessageBoxA("Für Anzahl der Fallklassen bitte nur ganze Zahlen eingeben.", "Eingabefehler", 0);
                                fehler = true;
                        }
                        else if( ! isdigit( st[i] ) )
                        {
                                Application->MessageBoxA("Für die Anzahl der Fallklassen bitte nur ganze Zahlen eingeben.\n Keine Buchstaben oder andere Zeichen eingeben!", "Falsches Zeichen eingegeben", 0);
                                fehler = true;
                        }
                        else
                        {}
                }
        }
        if( fehler == false )
        {

                /* ...->Text.ToInt()+1; weil Variable mit 0 initialisiert wurde */
                StringGridTabelle->RowCount = LabelAnzahlFallpauschalen->Text.ToInt()+1;


                int zZahl=-1;
                //Beschriftung der Zeilen
                for( int i = 1; i <= StringGridTabelle->RowCount; i++ )
                {
                       StringGridTabelle->Cells[0][i] = i;
                       zZahl++;
                }
                ofstream outputFileZ("C:/TEMP/anzahlZeilen.txt");
                outputFileZ<<zZahl;
                outputFileZ.close();
        }
}
//---------------------------------------------------------------------------










