<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html><head>


   <title>Kap. 1</title>
   <meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
   <link rel="stylesheet" href="Kap1_en-Dateien/skript.css">
</head><body class="script" bgproperties="fixed" background="Kap1_en-Dateien/bg_kapitel.gif">


<h1>1. Formulation a model</h1>

<a name="1.1"></a>
<h2>1.1 Introductory example of planning a production programme</h2>

<p class="block">The components of a formulation of Linear Programming shall be 
explained with a simple example of planning a production programme:</p>

<p class="block">A factory manufactures the products 1 and 2 on two universal 
machines. The capacity of the machines is measured in hours: the first machine's 
maximum capacity is 12 hours, the second machine's is 9 hours per day.</p>

<p class="block">Manufacturing product 1 takes three hours per piece on machine 1, 
and one hour on machine 2, whereas working on product 2 takes two hours on 
machine 1, and three hours on machine 2.</p>

<p class="block">The profit contribution for product 1 is € 1, but product 2 
achieves a profit contribution of € 2.</p>


<p>Ascertain the production programme!</p>

<p class="block">
With this setting of the task an economic environment is given, in this special 
case a problem of planning a production programme for which a mathematical model 
should be drawn up; in this case a formulation of Linear Programming. By model we 
mean a purpose orientated presentation of reality. Task of the "OR" will be to 
deliver a mathematical and problem specific interpretation about the given 
environment.</p>

<p><font size="-2" face="arial"><b>
This is illustrated in figure 1:</b></font></p>

<p>
</p><table width="540" bgcolor="#cfe7f9" border="1">
<tbody><tr>
<td><center><b>
  <br>
  (economic) &nbsp; &nbsp; &nbsp; ---- interpretation ---&gt; &nbsp; &nbsp; mathematical<br>

  environment
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp;&nbsp;
  model &nbsp; &nbsp;<br>

  : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
  :<br>

  production programme 
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  linear
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>

  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  planning
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
  &nbsp; &nbsp;
  equation system <br>

  <br>
  </b></center>
</td>
</tr>
</tbody></table>


<p class="abb">Figure 1</p>


<hr width="100%">
<a name="1.2"></a>
<h2>1.2 Decision variables (structure variables)</h2>

<p class="block">The example of planning a production programme results in a number 
of options of proceeding:<br>
We need to make a decision about the quantity of the products we 
want to manufacture per day. If we want to know how many pieces of product 1 and 
product 2 we want to manufacture per day, it is useful to allocate the variables 
x<sub>1</sub> and x<sub>2</sub> to these quantities:</p>

<ul>
x<sub>1</sub> is the amount of production of product 1<br>
x<sub>2</sub> is the amount of production of product 2</ul>

<p class="block">Since the variables  x<sub>1</sub> and x<sub>2</sub> form a 
statement about the decision that has to be made, we call them  
<b>decision variables</b>.
And since these variables also reflect the structure of the problem, 
we also use the term <b>structure variable</b>.</p>

<br>

<hr width="100%">
<a name="1.3"></a>
<h2>1.3 Restrictions</h2>

<p class="block">The possible options of proceeding are subject to problem 
specific restrictions.</p>

<p class="block">Manufacturing products 1 and 2 takes different times on machine one 
and machine two. All in all, machine 1 must be worked to capacity for twelve hours, 
and machine 2 nine hours. In practise this could occur, for instance, with machines 
for which it would be too costly to be switched off after only a short time.</p>

<p class="block">Suppose only product 1 were manufactured with machine one; we would 
have to produce exactly four pieces per day, because:</p>

<p></p><ol><tt>
3x<sub>1</sub> = 12 <img src="Kap1_en-Dateien/rArr_dop.gif"> x<sub>1</sub> = 4
</tt></ol><tt></tt>

<p class="block">If only product 2 were manufactured with machine one, we would have 
to produce exactly six pieces per day:</p>

<p></p><ol><tt>
2x<sub>2</sub> = 12 <img src="Kap1_en-Dateien/rArr_dop.gif"> x<sub>2</sub> = 6
</tt></ol><tt></tt>


<p class="block">According to the setting of the task, both products should be 
manufactured with machine one, which leads to some sort of mixing of both 
products on this machine:</p>

<p></p><ol><tt>
3x<sub>1</sub> + 2x<sub>2</sub> = 12 (I)</tt></ol><tt></tt>

<p>Analogously, the same applies for machine 2:</p>

<p></p><ol><tt>
1x<sub>1</sub> + 3x<sub>2</sub> = &nbsp;9 (II)</tt></ol><tt></tt>

<p class="block">The mathematical model shown in equations I and II forms the 
setting of the problem. By applying the <b>Gauss Algorithm</b> for solving 
regular linear equation systems, we can solve the problem:</p>

<p>
</p><table bgcolor="#e8f0f0" border="0" cellpadding="8" cellspacing="0">
<tbody><tr><td>
The Gauss elimination method (Pivot method) employs elmentary row
transformations. By this we understand: 
<ol type="a">
  <li>the interchange of two rows,
  </li><li>the addition of a row that is multiplied by any real number, with anothe row,
  </li><li>the muliplication of a row with any real number except zero.
</li></ol>
</td></tr></tbody></table>
<br>

<p class="block">
To revise the Gauss Algorithm, we shall briefly demonstrate it in the 
following example: Gauss Algorithm for solving linear equation systems:</p>


<p><font color="#8080c8"><b>
&nbsp; &nbsp; The Gauss elimination method, apply Pivot method</b></font></p>


<!-- zweispaltige Außentabelle zur Aufnahme von Tabellen und Textinhalten -->

<table width="700" border="1" cellpadding="14" cellspacing="1">
<tbody><tr>
<!-- 1. Spalte Außentab. -->
<td valign="top">
  <b>numerical example:</b><br>
  <samp><br>
  &nbsp; 3x<sub>1</sub> + 2x<sub>2</sub> = 12<br>
  &nbsp; 1x<sub>1</sub> + 3x<sub>2</sub> = &nbsp;9</samp><br>
  <br>

  <table border="0" cellpadding="4" cellspacing="12">      
  <colgroup>
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
  </colgroup>

  <tbody><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif"></td>
  <td>3<br>1</td>
  <td>2<br>3</td>  
  <td>|<br>|</td>
  <td>12<br>9</td>
  <td><img src="Kap1_en-Dateien/KlammerR.gif"></td>

  </tr><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif"></td>
  <td>1<br>1</td>
  <td>2/3<br>3</td>  
  <td>|<br>|</td>
  <td>4<br>9</td>
  <td><img src="Kap1_en-Dateien/KlammerR.gif"></td>

  </tr><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif"></td>
  <td>1<br>0</td>
  <td>2/3<br>7/3</td>  
  <td>|<br>|</td>
  <td>4<br>5</td>
  <td><img src="Kap1_en-Dateien/KlammerR.gif"></td>
  </tr></tbody></table>

</td>

<!-- 2. Spalte Außentab. -->
<td valign="top">
  <b>general:</b><br>
  <samp><br>
  &nbsp; a<sub>11</sub>x<sub>1</sub> + a<sub>12</sub>x<sub>2</sub> = b<sub>1</sub><br>
  &nbsp; a<sub>21</sub>x<sub>1</sub> + a<sub>22</sub>x<sub>2</sub> = b<sub>2</sub></samp><br>
  <br>

  <table border="0" cellpadding="6" cellspacing="8">      
  <colgroup>
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
  </colgroup>

  <tbody><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif"></td>
  <td>a<sub>11</sub><br>a<sub>12</sub></td>
  <td>a<sub>21</sub><br>a<sub>22</sub></td>  
  <td>|<br>|</td>
  <td>b<sub>1</sub><br>b<sub>2</sub></td>
  <td><img src="Kap1_en-Dateien/KlammerR.gif"></td>

  </tr><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif"></td>
  <td>1<br>a<sub>21</sub></td> 
  <td>a<sub>12</sub> / a<sub>11</sub><br>a<sub>22</sub></td>  
  <td>|<br>|</td>
  <td>b<sub>1</sub> / a<sub>11</sub><br>b<sub>2</sub></td>
  <td><img src="Kap1_en-Dateien/KlammerR.gif"></td>

  </tr><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif"></td>
  <td><span style="background-color: rgb(231, 249, 207);">&nbsp;1 </span><br>0</td>
  <td>a<sub>12</sub> / a<sub>11</sub><br>
                a<sub>22</sub> - (a<sub>12</sub> / a<sub>11</sub>) * a<sub>21</sub></td>  
  <td>|<br>|</td>
  <td>b<sub>1</sub> / a<sub>11</sub><br>
                b<sub>2</sub> - (b<sub>1</sub> / a<sub>11</sub>) * a<sub>21</sub></td>
  <td><img src="Kap1_en-Dateien/KlammerR.gif"></td>
    
  </tr></tbody></table>

  <br>
  &nbsp; &nbsp;
  Pivot Row: &nbsp; &nbsp; &nbsp; <samp>r = 1</samp><br>
  &nbsp; &nbsp;
  Pivot Column: &nbsp; <samp>s = 1</samp>

</td>

</tr>
</tbody></table>

<!-- Ende Außentabelle -->


<p><br>
<font color="#000000"><u>Converting the tableaus generally it applies</u></font></p>

<p>&nbsp; &nbsp; <b>generally applies for:</b>

</p><p>&nbsp; &nbsp; 1. <u>Pivot row</u>

</p><ul><!-- Formeln mittels Tab.-Struk. umgesetzt -->
<table><tbody><tr>
<td><font face="courier new">
    a<sub>rj</sub><sup>(n+1)</sup>&nbsp; = &nbsp;</font>
</td><td align="center"><font face="courier new">
    a<sub>rj</sub><sup>(n)</sup><br>
    <font size="1">——————————</font><br>
    a<sub>rs</sub><sup>(n)</sup></font>
</td><td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;
</td><td>
    <font face="symbol">Ù</font><br>
    <font face="courier new">j</font><br>
    &nbsp;
</td></tr></tbody></table>
<br>

<table><tbody><tr>
<td><font face="courier new">
    b<sub>r</sub><sup>(n+1)</sup> &nbsp; = &nbsp;</font>
</td><td align="center"><font face="courier new">
    b<sub>r</sub><sup>(n)</sup><br>
    <font size="1">——————————</font><br>
    b<sub>rs</sub><sup>(n)</sup></font>
</td></tr></tbody></table>
</ul>


<p>&nbsp; &nbsp; 2. <u>Remaining elements</u>

</p><ul>
<!-- Formeln mittels Tab.-Struk. umgesetzt -->
<table><tbody><tr>
<td><font face="courier new">
    a<sub>ij</sub><sup>(n+1)</sup>&nbsp; =&nbsp;
    a<sub>ij</sub><sup>(n)</sup> -&nbsp;</font>
</td><td align="center"><font face="courier new">
    a<sub>rj</sub><sup>(n)</sup><br>
    <font size="1">——————————</font><br>
    a<sub>rs</sub><sup>(n)</sup></font>
</td><td><font face="courier new">
    &nbsp;* a<sub>is</sub><sup>(n)</sup></font>
</td><td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
</td><td><font face="symbol">Ù</font><br>
    <font face="courier new">j ,</font><br>&nbsp;
</td><td><font face="symbol">Ù</font><br>
    <font face="courier new">i</font><br>&nbsp;
</td><td><font face="courier new">
    &nbsp; &nbsp; i &#8800; r</font>
</td></tr></tbody></table>
<br>

<table><tbody><tr>
<td><font face="courier new">
    b<sub>i</sub><sup>(n+1)</sup> &nbsp; =&nbsp;
    b<sub>i</sub><sup>(n)</sup> -&nbsp;</font>
</td><td align="center"><font face="courier new">
    b<sub>r</sub><sup>(n)</sup><br>
    <font size="1">——————————</font><br>
    a<sub>rs</sub><sup>(n)</sup></font>
</td><td><font face="courier new">
    &nbsp;* a<sub>is</sub><sup>(n)</sup></font>
</td><td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
</td><td><font face="symbol">Ù</font><br>
    <font face="courier new">i</font><br>&nbsp;
</td><td><font face="courier new">
    &nbsp; &nbsp; i &#8800; r</font>
</td></tr></tbody></table>
</ul>


<ul>
  <table border="0" cellpadding="4" cellspacing="12">      
  <colgroup>
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
     <col align="right">
  </colgroup>
  
  <tbody><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif">
  </td><td>1<br>0
  </td><td>2/3<br>7/3  
  </td><td>|<br>|
  </td><td>4<br>5
  </td><td><img src="Kap1_en-Dateien/KlammerR.gif">

  </td></tr><tr>
  <td><img src="Kap1_en-Dateien/KlammerL.gif">
  </td><td>1<br>0
  </td><td>0<br>1
  </td><td>|<br>|
  </td><td>18 / 7<br>15 / 7
  </td><td><img src="Kap1_en-Dateien/KlammerR.gif">

  </td></tr></tbody></table>

  <p><br>
  <u><b>Solution:</b></u>
  &nbsp; &nbsp; &nbsp; &nbsp; 
  x<sub>1</sub> = 18 / 7 
  &nbsp; &nbsp; &nbsp; 
  x<sub>2</sub> = 15 / 7
  </p>

</ul>
<br>



<!-- die alten "Gesamt"-Grafiken -->

<!-- IMG SRC="g_algo1.gif" HEIGHT=731 WIDTH=600--><!-- br-->
<!-- IMG SRC="g_algo2.gif" HEIGHT=617 WIDTH=560-->



<p class="block">The interpretation of this solution of the mathematical model is 
as follows:<br>
Every day we need to produce two 4 / 7 pieces of product 1, and two 1 / 7 
piece of product 2.</p>

<p class="block">The fraction numbers of the solution can in this case be interpreted 
as follows:<br>
After the 12 and 9 hours, respectively, of the machine's capacity, the process 
can continue the next day on a piece that has already been worked on.</p>

<p class="block">Graphically, the solution point of the mathematical model yields 
from the point of intersection of two lines. The two restrictions I and II can 
be drawn in the coordinate system as lines, as in figure 2.</p>

<p><img src="Kap1_en-Dateien/Image28.gif">  <!-- HEIGHT=400 WIDTH=430--> 
</p><p class="abb">Figure 2</p>
<br>

<p><img src="Kap1_en-Dateien/Image29.gif">  <!-- HEIGHT=480 WIDTH=436-->
</p><p class="abb">Figure 3</p>


<p class="block">As seen in figure 2, the solution point is at the point of
intersection of the two lines I and II , in point C. The profit contribution for 
this optimum solution is:</p>

<center><p>18 / 7 * 1 + 15 / 7 * 2 = 48 / 7 &nbsp;( € )</p></center>

<p class="block">
This solution applies to a model formulation that represents a particular problem
of Linear Programming. We want to generalise this now:  The underlined statement of 
the original setting of the task, "must be worked to capacity", is now replaced by 
the statement "to be available". Furthermore, we want to look for the optimum 
production programme. This relaxation leads to an extension of the 
solution set. In the restrictions I and II, we need to replace the equality 
relation by "<img src="Kap1_en-Dateien/le.gif">". 
We have now a wider scope regarding the restrictions of the problem.</p>

<p class="block">In the diagram, the only solution point is now replaced by the whole 
area below the two restriction lines I and II (hatched in fig.3).</p>

<p>It is an infinitely wide and unlimited solution set.</p>

<p class="block">Looking at the hatched area below the line, we can see that the 
points that lie below the abscissa and left of the ordinate, respectively, cannot 
be interpreted meaningfully under economic aspects. Therefore, we need to further 
restrict the solution area:</p>

<br>

<hr width="100%">
<a name="1.4"></a>
<h2>1.4 Non-negativity restriction</h2>

<p class="block">Negative values can be excluded with such a setting of the task. 
Therefore, we need to introduce so-called non-negativity restrictions that guarantee 
positive values for the variables x<sub>1</sub> and x<sub>2</sub>:</p>

<p>
</p><ul>
x<sub>1</sub> <img src="Kap1_en-Dateien/ge.gif"> 0<br>
x<sub>2</sub> <img src="Kap1_en-Dateien/ge.gif"> 0<br>
</ul>

<p class="block">The consequences of the non-negativity restriction can be seen in 
fig.4: the solution area is limited to the positive area.</p>

<p><img src="Kap1_en-Dateien/Image32.gif">  <!-- HEIGHT=360 WIDTH=360--></p>
<p class="abb">Figure 4</p>

<p class="block">The solution area is now a convex polyeder M, formerly also known 
as solution complex. This solution area is given for our two-dimensional example 
by the quadrilateral A, B, C, D from fig. 5.</p>
 
<p><img src="Kap1_en-Dateien/Image33.gif">  <!-- HEIGHT=360 WIDTH=360--></p>
<p class="abb">Figure 5</p>


<p class="block">The solution area M is limited to all sides, but still contains an 
infinite number of solutions. Its convex feature is given, because the linear 
connections between all arbitrary points of the area run only within this area. 
The structure in fig. 6, for example, is not convex, as we are able to find two 
points whose connection lines lie outwith the structure.</p>

<p><img src="Kap1_en-Dateien/Image34.gif"><br>
<span class="Abb">Figure 6</span>

</p><p class="block">Now that we have seen that the problem of planning a production 
programme offers an infinite number of solutions, we want to know which specific 
solutions we need. It turns out that the difficulty of the example cannot be 
solved by a linear equation system. A further criterion is needed!</p>
<br>


<hr width="100%">
<a name="1.5"></a>
<h2>1.5 Objective function</h2>

<p class="block">
We want to optimise the production program, that is to say, in this case, 
we want to select an option, out of the multitude of possible options of proceeding 
(combinations of the number of pieces of product 1 and 2) in such a way that we will 
be able to meet a given objective. Hereby, we want to pursue the objective of 
maximising the profit contribution. With that, we are looking for <b>the</b>
solution of the solution area M, for which the profit contribution is maximal. 
In the example, the profit contribution per piece amounts to</p>

<ul>
for product 1: &nbsp; € 1.-<br>
for product 2: &nbsp; € 2.-</ul>

<p class="block">The profit contribution follows from the number of manufactured 
products multiplied by the profit contribution per piece. From this results the 
objective function:</p>

<ul>Z = 1 x<sub>1</sub> + 2 x<sub>2</sub> &nbsp; ( € ).
</ul>

<p class="block">
In this context, we want to highlight a brief consideration: intuitively 
speaking, we would like to produce as many units of product 2 as possible, as it 
offers the highest profit contribution. This decision, however, would not be 
optimal, as we shall see in the following example: if we solely want to produce 
product 2, we can only produce 3 pieces because of the restrictions; the profit 
contribution would then only be € 6 per day.</p>

<p class="block">
If we instead limit product 2 to 2 pieces, and used the now free capacities for 
the production of 2.5 pieces of product 1, we would get a profit contribution of</p>

<ul>
2 * 2 = 4 and<br>
2.5 * 1 = 2.5<br>
<br>
(all in all € 6.50).</ul>

<p class="block">
This solution is certainly better and, as we shall see later, closer to the 
optimum. Thus, we see that under certain restrictions, it is not always sensible 
to preferentially manufacture the most profitable product.</p>

<p>Formalising the maximisation of the profit contribution is then:</p>

<ul>
Z = 1 * x<sub>1</sub> + 2 * x<sub>2</sub> <img src="Kap1_en-Dateien/rarr.gif"> max !
</ul>

<p class="block">
This equation can also be projected as a straight line, but we need 
to fill in arbitrary amounts for F. As every point on this line amounts to the 
same profit contribution (or profit), we can also call it <b>iso profit line</b>.
Fig. 7 shows several examples for different values of F on this iso profit line.</p>

<p class="block">
If we push the line parallelly as far as possible from the origin, the absolute 
part of the iso profit line F will increase steadily. As the aim of the 
task is maximisation, the optimum solution can in this case only be the point of 
intersection of the iso profit line with the solution area M that lies furthest 
from the origin of the coordinate system. We have now introduced all the components 
of a  formulation of Linear Programming; they shall be summarised again in the 
following paragraph.</p>
<br>

<pre style="font-size: 10pt;">   objective function:          OBJ = 1x<sub>1</sub> + 2x<sub>2</sub> --&gt; max !

   equation of the line of Z:   OBJ = 1x<sub>1</sub> + 2x<sub>2</sub>

                                 x<sub>2</sub> = -1/2x<sub>1</sub> + F/2
</pre>


<p><img src="Kap1_en-Dateien/Image36.gif"></p>

<pre style="font-size: 10pt;">   optimum:  x<sub>1</sub> = 16/7 ;  x<sub>2</sub> = 15/7 ;  F = 48/7 ;
</pre> 

<p class="abb">Figure 7</p>

<br>


<hr width="100%">
<a name="1.6"></a>
<h2>1.6 Formulation of Linear Programming</h2>

<a name="1.6.1"></a>
<h3>1.6.1 Restrictions and formulation of the problem</h3>


<p>
</p><ol type="a">
  <li><p>decision variables:<br>
      "How much do we want to produce of product 1 and 2 ?"<br>
      <br>
      x<sub>1</sub> amount of production of product 1 in pieces<br>
      x<sub>2</sub> amount of production of product 2 in pieces</p>

  </li><li><p>objective: "Maximise the profit contribution 
       by using the available capacities (resources)"</p>

  </li><li><p>restrictions:</p>
</li></ol>



<p align="center">
<br>

</p><table bgcolor="#cff9e7" border="1" cellpadding="8" cellspacing="0">
<colgroup>
	<col align="center">
	<col align="center">
	<col align="center">
	<col align="center">
</colgroup>
<tbody><tr>
 <td>&nbsp; </td>
 <td><b>product 1</b></td>
 <td><b>product 2</b></td>
 <td><b>capacity</b></td>
</tr>
<tr>
 <td><b>machine 1</b></td>
 <td>3</td>
 <td>2</td>
 <td>12 h</td>
</tr>
<tr>
 <td><b>machine 2</b></td>
 <td>1</td>
 <td>3</td>
 <td>&nbsp; 9 h</td>
</tr>
</tbody></table>

<br>


<a name="1.6.2"></a>
<h3>1.6.2 Complete formulation of LP:</h3>

<pre>  OBJ = 1x<sub>1</sub> + 2x<sub>2</sub> &#8594; max!   objective function

        3x<sub>1</sub> + 2x<sub>2</sub> &#8804; 12     restriction  I
        1x<sub>1</sub> + 3x<sub>2</sub> &#8804;  9     restriction  II<br>
        x<sub>1</sub>, x<sub>2</sub> &#8804; 0         non-negativity restrictions
</pre>
<br>

<!-- MATRIX-AUFRUF -------------------------------------------------->
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<font size="-1" face="arial"><b>
<a href="file://///Merkur/lehre/Gruetz/BESF/OR_HtmlSkript/KAP1/MATRIX%28mat01#01.lpx%29">Solver call</a>
with the standard example.</b></font><b></b></p>

<br>


<a name="1.6.3"></a>
<h3>1.6.3 Standard form of Linear Programming</h3>

<ul>
<table><tbody><tr>
<td><samp>OBJ =
</samp></td><td align="center">
   <font size="-2">n<br>
   <font size="+2">&#8721;<br>
   <font size="-2">j = 1
</font></font></font></td><td><samp>(c<sub>j</sub> x<sub>j</sub>) --&gt; max ! &nbsp; &nbsp;(j = 1...n)
</samp></td></tr></tbody></table>
<br>

<table><tbody><tr>
<td><samp>&nbsp; &nbsp; &nbsp;
</samp></td><td align="center">
   <font size="-2">n<br>
   <font size="+2">&#8721;<br>
   <font size="-2">j = 1
</font></font></font></td><td><samp>(a<sub>ij</sub> x<sub>j</sub>) <img src="Kap1_en-Dateien/le.gif"> b<sub>i</sub> 
</samp></td><td><samp>&nbsp; &nbsp; &nbsp; &nbsp; (i = 1, 2,..., m)
</samp></td></tr></tbody></table>
<br>

<samp>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
x<sub>j</sub> <img src="Kap1_en-Dateien/ge.gif"> 0      
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; (j = 1, 2,..., n)
</samp>

</ul>

<p>Where 
&nbsp;<samp>a<sub>ij</sub>, c<sub>j</sub>, b<sub>i</sub></samp>&nbsp; are constants.


</p><p></p><hr width="100%">
<font size="-1" face="arial"><b>
<a href="file://///Merkur/lehre/Gruetz/BESF/OR_HtmlSkript/Einfuehr_en.Htm">introduction</a><br>
<a href="file://///Merkur/lehre/Gruetz/BESF/OR_HtmlSkript/KAP2/Kap2_en.Htm">chapter 2</a><br>
<br>
<a href="file://///Merkur/lehre/Gruetz/BESF/OR_HtmlSkript/PcStart_en.Htm">start screen</a></b></font>

</body></html>