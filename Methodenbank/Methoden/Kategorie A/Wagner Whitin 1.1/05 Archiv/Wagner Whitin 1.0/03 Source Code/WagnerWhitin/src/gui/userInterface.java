/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author snogles
 */
public class userInterface extends javax.swing.JFrame {

    /**
     * Creates new form userInterface
     */
    public boolean perLagerkosten = false;
    public double lagerkosten[];
    private static Object[][] inputTableData;
    private static double periodenbedarf[];
    private static JTable jTable;

    public userInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jFrame1 = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        RuestkostenEF = new javax.swing.JTextField();
        PeriodenEF = new javax.swing.JTextField();
        LagerkostenEF = new javax.swing.JTextField();
        varLagerkostenCB = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        berechnung = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Wagner Whitin Algorithmus - Lagerhaltungsoptimierung");
        setFocusCycleRoot(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Wagner-Whitin-Algorithmus");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setMinimumSize(new java.awt.Dimension(38, 14));
        jLabel2.setOpaque(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Anzahl der Perioden :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Bestellkostensatz :");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Lagerkostensatz :");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        RuestkostenEF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        RuestkostenEF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RuestkostenEFActionPerformed(evt);
            }
        });
        RuestkostenEF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                RuestkostenEFKeyTyped(evt);
            }
        });

        PeriodenEF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        LagerkostenEF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        LagerkostenEF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LagerkostenEFActionPerformed(evt);
            }
        });

        varLagerkostenCB.setText("jCheckBox1");
        varLagerkostenCB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                varLagerkostenCBStateChanged(evt);
            }
        });
        varLagerkostenCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                varLagerkostenCBActionPerformed(evt);
            }
        });

        jLabel5.setText("variable Lagerkosten");

        jButton1.setText("Weiter !");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                werteEingeben(evt);
            }
        });

        jLabel6.setText("GE");

        jLabel7.setText("Perioden");

        jLabel8.setText("GE pro ME pro ZE");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Periode", "Bedarf der Periode", "Lagerkosten der Periode"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRequestFocusEnabled(false);
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);

        berechnung.setText("Berechnung !");
        berechnung.setEnabled(false);
        berechnung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                berechnungActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RuestkostenEF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PeriodenEF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LagerkostenEF, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(varLagerkostenCB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(berechnung)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(RuestkostenEF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PeriodenEF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(LagerkostenEF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(varLagerkostenCB)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(berechnung)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RuestkostenEFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RuestkostenEFActionPerformed
    }//GEN-LAST:event_RuestkostenEFActionPerformed

    private void varLagerkostenCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_varLagerkostenCBActionPerformed
        if (LagerkostenEF.isEnabled() == true) {
            LagerkostenEF.setEnabled(false);

            perLagerkosten = true;

            //System.out.println("variable Lagerkosten aktiviert!");
        } else {
            LagerkostenEF.setEnabled(true);
            perLagerkosten = false;
            //System.out.println("variable Lagerkosten deaktiviert!");
        }
    }//GEN-LAST:event_varLagerkostenCBActionPerformed

    private void LagerkostenEFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LagerkostenEFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LagerkostenEFActionPerformed

    private void varLagerkostenCBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_varLagerkostenCBStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_varLagerkostenCBStateChanged

    private void werteEingeben(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_werteEingeben
        System.out.println("Auslesen:");

        try {
            logic.WagWhit.setRuestkosten(Double.parseDouble(RuestkostenEF.getText()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(), "Bitte nur numerische Werte eingeben! ", "Fehlerhafte Eingabe",
                    JOptionPane.ERROR_MESSAGE);
        }
        try {
            logic.WagWhit.setAnzahlPerioden(Integer.parseInt(PeriodenEF.getText()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(), "Die Periodenanzahl muss ganzzahlig sein! ", "Fehlerhafte Eingabe",
                    JOptionPane.ERROR_MESSAGE);
        }

        System.out.println("Rüstkosten gesetzt auf: \t " + logic.WagWhit.getRuestkosten());
        System.out.println("Periodenzahl gesetzt auf: \t " + logic.WagWhit.getAnzahlPerioden());


        lagerkosten = new double[logic.WagWhit.getAnzahlPerioden()];


        if (perLagerkosten != false) {
            System.out.println("Lagerkostenarray für variable Lagerkosten erstellt");
            lagerkosten[0] = 0;
        } else {
            try {
                lagerkosten[0] = (Double.parseDouble(LagerkostenEF.getText()));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(new JFrame(), "Bitte nur numerische Werte eingeben! ", "Fehlerhafte Eingabe", JOptionPane.ERROR_MESSAGE);
            }
            System.out.println("Lagerkostenarray für fixe Lagerkosten (" + LagerkostenEF.getText() + ") erstellt");
        }

        for (int i = 1; i < lagerkosten.length; i++) {
            lagerkosten[i] = lagerkosten[0];
        }

        inputTableData = new Object[logic.WagWhit.getAnzahlPerioden()][3];

        for (int i = 0; i < logic.WagWhit.getAnzahlPerioden(); i++) {
            inputTableData[i][0] = (i + 1);
            inputTableData[i][1] = null;
            if (perLagerkosten != false) {
                inputTableData[i][2] = null;
            } else {
                inputTableData[i][2] = lagerkosten[i];
            }
        }



        if (perLagerkosten == true){  //bei variablen Lagerkosten wird die Spalte Lagerkosten auf bearbeitbar gesetzt....
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    inputTableData,
                    new String[]{
                "Periode", "Bedarf", "Lagerkosten"
            }) {
                Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
                };
                boolean[] canEdit = new boolean[]{
                    false, true, true
                }; //bearbeitbarkeit der Spalten

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });
        } else { //bei fixen Lagerkosten ist die Spalte Lagerkosten nicht bearbeitbar
            jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    inputTableData,
                    new String[]{
                "Periode", "Bedarf", "Lagerkosten"
            }) {
                Class[] types = new Class[]{
                    java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
                };
                boolean[] canEdit = new boolean[]{
                    false, true, false
                }; //bearbeitbarkeit der Spalten

                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

        }
       
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);
        
        
        berechnung.setEnabled(true);





    }//GEN-LAST:event_werteEingeben

    private void RuestkostenEFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RuestkostenEFKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_RuestkostenEFKeyTyped

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
    }//GEN-LAST:event_jTable1PropertyChange

    private void berechnungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_berechnungActionPerformed
        //Tabelle scannen und in die Felder übernehmen ...


        periodenbedarf = new double[logic.WagWhit.getAnzahlPerioden()];
        jTable1.getDefaultEditor(Double.class).stopCellEditing();
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            try {
                periodenbedarf[i] = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, 1)));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(new JFrame(), "Bitte nur numerische Werte als Bedarfsmengen eingeben!", "Fehlerhafte Eingabe", JOptionPane.ERROR_MESSAGE);
            }
        }

        logic.WagWhit.setPeriodenbedarf(periodenbedarf);

        for (int i = 0; i < jTable1.getRowCount(); i++) {
            try {
                lagerkosten[i] = Double.parseDouble(String.valueOf(jTable1.getValueAt(i, 2)));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(new JFrame(), "Bitte nur numerische Werte als Lagerkosten eingeben!", "Fehlerhafte Eingabe", JOptionPane.ERROR_MESSAGE);
            }
        }

        logic.WagWhit.setLagerkosten(lagerkosten);



        System.out.println("Testausgabe der Parameter:");
        System.out.println("Anzahl der Perioden: \t" + logic.WagWhit.getAnzahlPerioden());
        System.out.println("Rüstkosten: \t" + logic.WagWhit.getRuestkosten());

        for (int i = 0; i < lagerkosten.length; i++) {
            System.out.println(i + 1 + ". Periode: \t " + periodenbedarf[i] + " \t" + lagerkosten[i]);
        }

        logic.WagWhit.start();

        gui.Solutions.main(null);


        //jTable = new JTable(logic.WagWhit.getObjectAusgabe(), ausgabeBezeichnungen);
        //JFrame f = new JFrame();
        //f.setTitle("WagnerWhitin - Lösung:");
        //JPanel panel = new JPanel();
        //JLabel label = new JLabel("Blabla TESTEST Ding dong");
        //panel.add(label);
        //f.add(panel);

        //f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //f.add( new JScrollPane(jTable));
        //f.pack();
        //f.setVisible(true);







    }//GEN-LAST:event_berechnungActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userInterface().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LagerkostenEF;
    private javax.swing.JTextField PeriodenEF;
    private javax.swing.JTextField RuestkostenEF;
    private javax.swing.JButton berechnung;
    private javax.swing.JButton jButton1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JTable jTable1;
    private javax.swing.JCheckBox varLagerkostenCB;
    // End of variables declaration//GEN-END:variables
}
