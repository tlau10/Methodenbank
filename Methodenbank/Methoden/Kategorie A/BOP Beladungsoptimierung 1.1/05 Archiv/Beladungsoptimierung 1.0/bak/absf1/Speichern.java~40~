package absf1;

/**
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: </p>
 * @author unascribed
 * @version 1.0
 */

import java.io.*;
import javax.swing.table.TableModel;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;
import java.beans.XMLEncoder;


public class Speichern {

  //Klassenattribute
  TableModel LkwModell;
  TableModel GebindeModell;


  public Speichern(TableModel pLkwModell, TableModel pGebindeModell) {

    LkwModell = pLkwModell;
    GebindeModell = pGebindeModell;
  }

  /**
   * Diese Methode dient zum speichern von Modellen. Sie erwartet einen Datei-Pfad, wo sich die zu
   * speichernde Datei befinden soll.
   *
   * @param path - wo sich die zu speichernde Datei befinden soll
   */

  public void speichernObjekt( File path ) {
System.out.println("hallo");
    try {
      if( path != null ) {
/*
        FileOutputStream file = new FileOutputStream( path );
        ObjectOutputStream out = new ObjectOutputStream( file );
        out.writeObject( LkwModell );
        out.writeObject( GebindeModell );
        out.flush();
        out.close();


       XMLEncoder e = new XMLEncoder(
                          new BufferedOutputStream(
                              new FileOutputStream(path)));

        String[][] values = new String[LkwModell.getRowCount()][LkwModell.getColumnCount()];
        for(int i = 0; i < LkwModell.getRowCount(); i++)
        {
          for(int j = 0; j < LkwModell.getColumnCount(); j++)
          {
          values[i][j] = (String) LkwModell.getValueAt(i, j);
          }
        }
        e.writeObject(values);

        String[][] values2 = new String[GebindeModell.getRowCount()][GebindeModell.getColumnCount()];
        for(int i = 0; i < GebindeModell.getRowCount(); i++)
        {
          for(int j = 0; j < GebindeModell.getColumnCount(); j++)
          {
            values2[i][j] = (String) GebindeModell.getValueAt(i, j);
          }
        }
        e.writeObject(values2);



        e.close();

            */

           String[][] values = new String[LkwModell.getRowCount()][LkwModell.getColumnCount()];
                  for(int i = 0; i < LkwModell.getRowCount(); i++)
                  {
                    for(int j = 0; j < LkwModell.getColumnCount(); j++)
                    {
                    values[i][j] = (String) LkwModell.getValueAt(i, j);
                    }
                  }

                  String[][] values2 = new String[GebindeModell.getRowCount()][GebindeModell.getColumnCount()];
                  for(int i = 0; i < GebindeModell.getRowCount(); i++)
                  {
                    for(int j = 0; j < GebindeModell.getColumnCount(); j++)
                    {
                      values2[i][j] = (String) GebindeModell.getValueAt(i, j);
                    }
                  }



           FileOutputStream file = new FileOutputStream( path );
           ObjectOutputStream out = new ObjectOutputStream( file );
           out.writeObject( valuesLkw );
           out.writeObject( valuesGebinde );
           out.flush();
           out.close();

      }
    }
    catch( IOException ex ) {
      ex.printStackTrace();
    }

  }

}